<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializacion
canSee = true;
canWrite = true;
sCount = 0;
nombre = "";
oScale = 1.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actualizar el objeto
if (room == Room_Name)
{
    if (canWrite)
    {
        if (string_length(nombre) &lt; 7)
        {
            nombre = keyboard_string;   
        } else if (keyboard_check(vk_backspace)) {
            nombre = string_delete(nombre, string_length(nombre) - 1, 1);
            keyboard_string = nombre;
        }
    } else {
        keyboard_string = nombre;
    }
    
    if (keyboard_check_released(vk_enter) &amp;&amp; string_length(nombre) &gt;= 1 &amp;&amp; canSee)
    {
        canSee = false;
        canWrite = false;
    } else if (canSee == false) {
        if (keyboard_check_released(vk_left)  || keyboard_check_released(ord('A')))
        {
            sCount = 0;
        }
        if (keyboard_check_released(vk_right) || keyboard_check_released(ord('D')) ) 
        {
            sCount = 1;
        }
        if (keyboard_check_released(vk_enter))
        {
            if (sCount == 0)
            {
                canSee = true;
                canWrite = true;
            } else if (sCount == 1) {
                room_goto(Room_1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar los textos
lvl = 19;
hp = 20;
thp = (20 + ((lvl - 1) * 4));
if (room == Room_Name)
{   
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_font(ut_ebits_font);
    if (canSee)
    {
        rrx2 = random_range(1, -1);
        rry2 = random_range(1, -1);
        rrx = random_range(1, -1);
        rry = random_range(1, -1);
        draw_text(320 + rrx2, 150 + rry2, "Â¿Cual es tu nombre?");
        draw_text(320 + rrx, 220 + rry, nombre);
    } else {
        draw_text(320, 100, "Es correcto este nombre?");
        if (sCount == 0)
        {
            draw_text_color(60, 410, "No", c_yellow, c_yellow, c_yellow, c_yellow, 1);
            draw_text_color(580, 410, "Si", c_white, c_white, c_white, c_white, 1);
        }
        if (sCount == 1) 
        {
            draw_text_color(60, 410, "No", c_white, c_white, c_white, c_white, 1);
            draw_text_color(580, 410, "Si", c_yellow, c_yellow, c_yellow, c_yellow, 1);
        }
        rrx = random_range(1.5, -1.5);
        rry = random_range(1.5, -1.5);
        if (oScale &lt;= 2.19)
        {
            oScale += 0.01;
        }
        draw_text_transformed(320 + rrx, 220 + rry + 0.01, nombre, oScale, oScale, 0);
    }
} else {
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_set_font(ut_hachicro_font);
    draw_text(30, 398, nombre);
    draw_text(30 + string_width(nombre) + 20, 398, "LV");
    draw_text(30 + string_width(nombre) + 20 + 40, 398, lvl);
    draw_set_font(ut_hachico_font2);
    draw_set_color(c_red);
    draw_rectangle(274, 399, 274 + (24 + (5 * (lvl - 1))), 420, false); 
    draw_set_color(c_white);
    draw_text(238, 400, "hp");
    draw_set_font(ut_hachicro_font);
    draw_text(274 + (24 + (5 * (lvl - 1))) + 18, 398, string(hp) + "/" + string(thp));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
