<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar el menu
menuIndex = 0;
cLine1 = instance_create(0, 0, obj_bbline);
cLine2 = instance_create(0, 0, obj_bbline);
cLine3 = instance_create(0, 0, obj_bbline);
cLine4 = instance_create(0, 0, obj_bbline);
sMenu = false;
tiempo = 0;
tiempoB = 0;
pMTP = true;
isPlayerOnBattle = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_teclado.seleccionar_r) isPlayerOnBattle = !isPlayerOnBattle;

if(isPlayerOnBattle) if (menuIndex != 0) menuIndex = 0;

if(!isPlayerOnBattle)
{   
    if (obj_jugador.canMove) obj_jugador.canMove = false;
    
    if (tiempo &lt; 11)
    {
        obj_jugador.x = mover_linealmente(tiempo, obj_jugador.x, ((obj_fight_button.x - 38) - obj_jugador.x), 10);
        obj_jugador.y = mover_linealmente(tiempo, obj_jugador.y, (obj_fight_button.y - obj_jugador.y), 10);
        tiempo = tiempo + 1;
    } else {
        if (!sMenu) 
        {
            sMenu = true;
            obj_fight_button.sprite_index = spr_fight_button_s;
            obj_act_button.sprite_index = spr_act_button;
            obj_mercy_button.sprite_index = spr_mercy_button;
            audio_play_sound(snd_menu_select, 0, false);
        }
    }
    
    if (!pMTP) pMTP = true;
    
    if (sMenu)
    {
        if (obj_teclado.derecha_p)
        {
            if (menuIndex == 3) menuIndex = 0;
            else menuIndex++;
            audio_play_sound(snd_menu_select, 0, false);
        } else if (obj_teclado.izquierda_p) {
            if (menuIndex == 0) menuIndex = 3;
            else menuIndex--;
            audio_play_sound(snd_menu_select, 0, false);
        }
            
        switch(menuIndex)
        {
            case 0: 
                obj_fight_button.sprite_index = spr_fight_button_s;
                obj_act_button.sprite_index = spr_act_button;
                obj_mercy_button.sprite_index = spr_mercy_button;
                obj_jugador.x = obj_fight_button.x - 38;
                obj_jugador.y = obj_fight_button.y;
                break;
            case 1: 
                obj_act_button.sprite_index = spr_act_button_s;
                obj_fight_button.sprite_index = spr_fight_button;
                obj_item_button.sprite_index = spr_item_button;
                obj_jugador.x = obj_act_button.x - 38;
                obj_jugador.y = obj_act_button.y;
                break;
            case 2: 
                obj_item_button.sprite_index = spr_item_button_s;
                obj_act_button.sprite_index = spr_act_button;
                obj_mercy_button.sprite_index = spr_mercy_button;
                obj_jugador.x = obj_item_button.x - 38;
                obj_jugador.y = obj_item_button.y;
                break;
            case 3: 
                obj_mercy_button.sprite_index = spr_mercy_button_s;
                obj_fight_button.sprite_index = spr_fight_button;
                obj_item_button.sprite_index = spr_item_button;
                obj_jugador.x = obj_mercy_button.x - 38;
                obj_jugador.y = obj_mercy_button.y;
                break;
            default:
                obj_fight_button.sprite_index = spr_fight_button_s;
                obj_act_button.sprite_index = spr_act_button;
                obj_mercy_button.sprite_index = spr_mercy_button;
                obj_jugador.x = obj_fight_button.x - 38;
                obj_jugador.y = obj_fight_button.y;
                break;
        }
    }
} else {
    if (pMTP)
    {
        if (sMenu) sMenu = false;
        if (tiempo &gt; 0) tiempo = 0;
        if (obj_fight_button.sprite_index != spr_fight_button) obj_fight_button.sprite_index = spr_fight_button;
        if (obj_act_button.sprite_index != spr_act_button) obj_act_button.sprite_index = spr_act_button;
        if (obj_item_button.sprite_index != spr_item_button) obj_item_button.sprite_index = spr_item_button;
        if (obj_mercy_button.sprite_index != spr_mercy_button) obj_mercy_button.sprite_index = spr_mercy_button;
        
        if (tiempoB &lt; 11)
        {
            obj_jugador.x = mover_linealmente(tiempoB, obj_jugador.x, 311 - obj_jugador.x, 10);
            obj_jugador.y = mover_linealmente(tiempoB, obj_jugador.y, 290 - obj_jugador.y, 10);
            tiempoB = tiempoB + 1;
        } else {
            pMTP = false;
            tiempoB = 0;
        }
    } else {
        if (!obj_jugador.canMove) obj_jugador.canMove = true;
    }
}

create_bbox(227, 210, 170, 170, cLine1, cLine2, cLine3, cLine4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
