<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crear el dialogo
dText = noone;
dColor = noone;
dSound = noone;
dFont = noone;
tVisible = "";
tPage = 0;
tCount = 0;
tSpd = .5;
tWidth = 80;
tMargin = 0; 
aLength = 0;
dMode = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar el dialogo
if (dText[tPage] != "")
{   
    /*
    dMode references:
    0 - text only without dialog box
    1 - text with dialog box
    2 - text with dialog box and sprite
    3 - text with bubble dialog box
    case 3 = a new variable called bubble id is called to identify the bubble sprite that the user want to show.
    It can variate along time, so it will be an array.
    */
    
    if (dMode &lt; 3)
    {
        draw_set_color(dColor[tPage]);
    }
    
    draw_set_font(dFont[tPage]);
    
    if (string_char_at(dText[tPage], tCount) == " ")
    {
        lSpace = tCount;
    }
    
    var tWords = string_copy_words(dText[tPage], 1, tCount)
    
    if (string_width(tWords) &gt;= tWidth - (tMargin * 2))
    {
        dText[tPage] = string_delete(dText[tPage], lSpace, 1);
        dText[tPage] = string_insert("#", dText[tPage], lSpace);
    }
    
    if (tCount &lt; string_length(dText[tPage]))
    {
        audio_play_sound(dSound[tPage], 0, false);
    }
    
    tVisible = string_copy(dText[tPage], 0, tCount);
    
    var xx = x;
    var yy = y;
    draw_text(xx + tMargin, yy + tMargin, tVisible);
    tCount += tSpd;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
